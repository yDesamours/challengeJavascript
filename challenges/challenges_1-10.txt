*****************************Challenge 1**************************************
Un bus se déplace en ville, il prend et/ou dépose certaines personnes à chaque arrêt.
Vous recevez une liste d’entiers. Chaque élément comporte le nombre de personnes qui
montent dans le bus (le premier élément) et le nombre de personnes qui en sortent (le
deuxième élément).
Le 2e nombre du premier élément de la liste vaut toujours 0 car le bus est vide en arrivant
au premier arrêt de bus. Votre tâche consiste à renvoyer le nombre de personnes encore
dans le bus après le dernier arrêt.
number([[10,0],[3,5],[5,8]]) -> 5
number([[3,0],[9,1],[4,10],[12,2],[6,1],[7,10]]) -> 17
number([[3,0],[9,1],[4,8],[12,2],[6,1],[7,8]]) -> 21

*****************************Challenge 2**************************************
Nous avons besoin d'une fonction qui compte le nombre de moutons présents dans un tableau donné (true
signifie que le mouton est présent). Par exemple vous devrez trouver 17 moutons pour la liste suivante :
[true, true, true, false,
true, true, true, true ,
true, false, true, false,
true, false, false, true ,
true, true, true, true ,
false, false, true, true]

*****************************Challenge 3**************************************
En entrée on vous donne une chaîne de caractères, en sortie vous devez avoir la même phrase sans le
premier ni le dernier caractère.
removeChar("Ceci est une phrase")  "eci est une phras"

*****************************Challenge 4**************************************
Votre patron a décidé d'économiser de l'argent en achetant un logiciel de reconnaissance de caractères
pour numériser d'anciens romans dans votre base de données. Il semble que les mots soient bien saisis,
mais vous remarquez rapidement qu'il y a aussi des nombres dans des endroits aléatoires dans le texte :
stringClean ('! !')  '! !'
stringClean ('123456789')  ''
stringClean("(E3at m2e2!!)")  "(Eat me!!)"
stringClean("Wh7y can't we3 bu1y the goo0d software3? #cheapskates3")  "Why can't we
buy the good software? #cheapskates"
Vos collaborateurs vous demandent une solution pour supprimer tous les nombres. Votre programme
prendra en entrée une chaîne, devra nettoyer tous les caractères numériques, et renverra une chaîne avec
les espacements, caractères et caractères spéciaux ~#$%^&!@*():; "'., tous intacts.

*****************************Challenge 5**************************************
A partir d'une chaîne de caractères, renvoyez une chaîne dans laquelle chaque caractère (sensible à la
casse) est répété une fois.
doubleChar("String")  "SSttrriinngg"
doubleChar("Hello World")  "HHeelllloo WWoorrlldd"
doubleChar("1234!_ ")  "11223344!!__ "

*****************************Challenge 6**************************************
A partir d’une liste de nombres, supprimez les doublons et renvoyez la liste simplifiée sous forme ordonnée.
removeDuplicates([1,1,2,4,5,2,1,2,3,5,5,5])
 Array [ 1, 2, 3, 4, 5 ]

*****************************Challenge 7**************************************
Deux joueurs - black et white - jouent à un jeu qui se compose de plusieurs tours. Si un joueur gagne
un tour, il commencera également le prochain. S’il perd, c'est l'autre joueur qui commencera. A partir de
la couleur du joueur actuel et du résultat du tour (true ou false), déterminez qui débutera le prochain
tour.
whoseMove("black",false)  "white"
whoseMove("white",true)  "white"
whoseMove("white",false)  "black"
 Array [ 1, 2, 3, 4, 5 ]

*****************************Challenge 8**************************************
Ecrire une fonction accum telle que :
accum("abcd")  "A-Bb-Ccc-Dddd"
accum("RqaEzty")  "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
accum("cwAt")  "C-Ww-Aaa-Tttt"
Remarquez les majuscules au début de chacun des blocs, le nombre de lettres croissant et la séparation
avec des tirets.

*****************************Challenge 9**************************************
La tribu Arara compte de la façon suivante :
1 = anane
2 = adak
3 = adak anane
4 = adak adak
5 = adak adak anane
6 = adak adak adak
7 = adak adak adak anane
8 = adak adak adak adak
Ecrire une fonction qui transforme un nombre en langage Arara.
countArara(1)  "anane"
countArara(3)  "adak anane"
countArara(8)  "adak adak adak adak

*****************************Challenge 10**************************************
Les distributeurs automatiques permettent de taper des codes PIN, ces
derniers ne peuvent contenir que 4 chiffres ou exactement 6 chiffres. Si
la fonction est transmise est un code PIN valide, renvoyez true, sinon
renvoyez false.
ValidatePIN ("1234")  true
ValidatePIN ("12345")  false
ValidatePIN ("a234")  false
