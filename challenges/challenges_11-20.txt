*************************challenge11***************************
Ajoutez une méthode toJadenCase à String.prototype qui permettra de mettre en majuscules chaque
première lettre des mots d’une phrase donnée.
"Ceci est une phrase".toJadenCase()  "Ceci Est Une Phrase"

*************************challenge 12***************************
Renvoyez le nombre de voyelles (a, e, i, o, et u) dans une chaîne donnée.
getCount("Ceci est une phrase")  7

************************challenge13*****************************
Des développeurs se sont inscrits pour assister à la prochaine réunion de codage que vous organisez.
Votre tâche consiste à renvoyer un objet qui comprend le nombre d'options alimentaires sélectionnées par
les développeurs sur le formulaire d'inscription. Par exemple, compte tenu du tableau de saisie suivant :
Var list1 = [
 {FirstName: 'Noah', lastName: 'M.', pays: 'Suisse', continent: 'Europe', age: 19, langue: 'C'
 Repas: 'végétarien'},
 {FirstName: 'Anna', lastName: 'R.', pays: 'Liechtenstein', continent: 'Europe', age: 52, langue:
'JavaScript',
 Repas: 'standard'},
 {FirstName: 'Ramona', lastName: 'R.', pays: 'Paraguay', continent: 'Amériques', age: 29, langue: 'Ruby',
 Repas: 'vegan'},
 {FirstName: 'George', lastName: 'B.', pays: 'Angleterre', continent: 'Europe', age: 81, langue: 'C'
 Repas: 'végétarien'},
];
Votre fonction doit renvoyer l'objet suivant (l'ordre des propriétés n'a pas d'importance):
{Végétarien: 2, standard: 1, vegan: 1}

***********************challenge14*******************************
Créez une fonction qui, à partir d’un nombre donné sous la forme d’une chaîne de caractères, renvoit :
counterEffect("1250")  [[0,1],[0,1,2],[0,1,2,3,4,5],[0]]
counterEffect("0050")  [[0],[0],[0,1,2,3,4,5],[0]]
counterEffect("0000")  [[0],[0],[0],[0]]

***********************challenge15****************************
A partir d’une liste de nombres, trouvez celui avec le plus de chiffres.
Si deux nombres dans le tableau ont le même nombre de chiffres, renvoyez le premier de la liste.
findLongest([1, 10, 100])  100
findLongest([9000, 8, 800])  9000
findLongest([8, 900, 500])  900

************************challenge16***************************
On vous donne une chaîne de mots, renvoyez la longueur du ou des mots les plus courts.
La chaîne ne sera jamais vide et vous ne devez pas tenir compte des types de données (nombres, lettres
etc.).
findShort("bitcoin take over the world maybe who knows perhaps")  3
